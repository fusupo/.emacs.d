#+TITLE: X-Tof's Emacs Config

* Config

** General Config

*** Winner mode - undo and redo window configuration

=winner-mode= lets you use =C-c <left>= and =C-c <right>= to switch between window configurations. This is handy when something has popped up a buffer that you want to look at briefly before returning to whatever you were working on. When you're done, press =C-c <left>=.

#+begin_src emacs-lisp
  (xtof/package-install 'winner)
  (use-package winner
    :config (winner-mode 1))
#+end_src





*** Undo tree mode - visualize your undos and branches

People often struggle with the Emacs undo model, where there's really no concept of "redo" - you simply undo the undo. 
# 
This lets you use =C-x u= (=undo-tree-visualize=) to visually walk through the changes you've made, undo back to a certain point (or redo), and go down different branches.

#+begin_src emacs-lisp
  (use-package undo-tree
    :init
    (progn
      (global-undo-tree-mode)
      (setq undo-tree-visualizer-timestamps t)
      (setq undo-tree-visualizer-diff t)))
#+end_src





** Nav

*** Windmove - switching between windows

Windmove lets you move between windows with something more natural than cycling through =C-x o= (=other-window=).
Windmove doesn't behave well with Org, so we need to use different keybindings.

#+begin_src emacs-lisp
;;  (use-package windmove
;;    :bind
;;    (("<f2> <right>" . windmove-right)
;;     ("<f2> <left>" . windmove-left)
;;     ("<f2> <up>" . windmove-up)
;;     ("<f2> <down>" . windmove-down)))
#+end_src

*** Make window splitting more useful

Copied from http://www.reddit.com/r/emacs/comments/25v0eo/you_emacs_tips_and_tricks/chldury
#+begin_src emacs-lisp
(defun xtof/vsplit-last-buffer (prefix)
  "Split the window vertically and display the previous buffer."
  (interactive "p")
  (split-window-vertically)
  (other-window 1 nil)
  (unless prefix
    (switch-to-next-buffer)))
(defun xtof/hsplit-last-buffer (prefix)
  "Split the window horizontally and display the previous buffer."
  (interactive "p")
  (split-window-horizontally)
  (other-window 1 nil)
  (unless prefix (switch-to-next-buffer)))
(bind-key "C-x 2" 'xtof/vsplit-last-buffer)
(bind-key "C-x 3" 'xtof/hsplit-last-buffer)

#+end_src



** Diagrams and graphics

Ooooh. Graphviz and Ditaa make it easier to create diagrams from Emacs. See [[http://sachachua.com/evil-plans]] for examples and source.

#+begin_src emacs-lisp
;;  (setq org-ditaa-jar-path "~/Documents/bin/ditaa0_9.jar")
;;  (setq org-startup-with-inline-images t)
;;  (add-hook 'org-babel-after-execute-hook 'org-display-inline-images)
;;  (org-babel-do-load-languages
;;   'org-babel-load-languages
;;   '((dot . t)
;;     (ditaa . t) 
;;     (R . t)))
;;  (add-to-list 'org-src-lang-modes '("dot" . graphviz-dot))
#+end_src

** Presentations

#+begin_src emacs-lisp
;;(use-package ox-reveal)
#+end_src
    
